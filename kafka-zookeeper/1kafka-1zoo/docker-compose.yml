version: '3.8'

services:
  zookeeper1:
    image: confluentinc/cp-zookeeper:${KAFKA_ZOO_VERSION}
    hostname: zookeeper1
    container_name: zookeeper1
    ports:
      - "2181:2181"
    networks:
      - monitoring
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper1:2888:3888;zookeeper2:2888:3888;zookeeper3:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:${KAFKA_ZOO_VERSION}
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    networks:
      - monitoring
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3

  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    container_name: kafka-manager
    ports:
      - "9000:9000"
    networks:
      - monitoring
    environment:
      ZK_HOSTS: "zookeeper1:2181"
      KM_AUTH_ENABLED: "true" # Enable authentication
      KM_USERNAME: "admin" # Set username
      KM_PASSWORD: "admin123" # Set password
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3

networks:
  monitoring:
    external: true
